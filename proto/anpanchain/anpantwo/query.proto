syntax = "proto3";

package anpan2val.anpanchain.anpantwo;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "anpanchain/anpantwo/params.proto";
import "anpanchain/anpantwo/task.proto";

option go_package = "github.com/anpan2val/anpan-chain/x/anpantwo/types";

// Query defines the gRPC querier service.
service Query {
  
  // Parameters queries the parameters of the module.
  rpc Params (QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/anpan2val/anpan-chain/anpantwo/params";
  
  }
  
  // Queries a list of Task items.
  rpc Task    (QueryGetTaskRequest) returns (QueryGetTaskResponse) {
    option (google.api.http).get = "/anpan2val/anpan-chain/anpantwo/task/{id}";
  
  }
  rpc TaskAll (QueryAllTaskRequest) returns (QueryAllTaskResponse) {
    option (google.api.http).get = "/anpan2val/anpan-chain/anpantwo/task";
  
  }
}
// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false];
}

message QueryGetTaskRequest {
  uint64 id = 1;
}

message QueryGetTaskResponse {
  Task Task = 1 [(gogoproto.nullable) = false];
}

message QueryAllTaskRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllTaskResponse {
  repeated Task                                   Task       = 1 [(gogoproto.nullable) = false];
           cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

